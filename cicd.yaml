# We actually use this file for CI of this repository.
# Though, it does not have any effect by locating this file in git repository.
# We applied it to our own k8s cluster.
apiVersion: cicd.tmax.io/v1
kind: IntegrationConfig
metadata:
  name: cicd-operator
spec:
  git:
    type: github
    repository: tmax-cloud/cicd-operator
    token:
      valueFrom:
        secretKeyRef:
          name: tmax-cloud-bot-token
          key: token
  secrets:
    - name: tmax-hub
  mergeConfig:
    method: squash
    query:
      blockLabels:
        - hold
      checks:
        - test-code
        - test-lint
      approveRequired: true
  jobs:
    preSubmit:
    - name: test-code
      image: golang:1.14
      script: |
        make test-crd
        make test-gen
        make test-verify
        make test-unit
      when:
        branch:
        - master
    - name: test-lint
      image: golangci/golangci-lint:v1.32
      script: |
        golangci-lint run ./... -v -E gofmt -E golint -E gocyclo -E misspell --timeout 1h0m0s
      when:
        branch:
        - master
    postSubmit:
    - name: test-code
      image: golang:1.14
      script: |
        make test-crd
        make test-gen
        make test-verify
        make test-unit
      when:
        branch:
          - master
    - name: test-lint
      image: golangci/golangci-lint:v1.32
      script: |
        golangci-lint run ./... -v -E gofmt --timeout 1h0m0s
      when:
        branch:
          - master
    - name: build-push-image
      image: quay.io/buildah/stable
      script: |
        TAG=${CI_HEAD_REF#refs/tags/}

        IMG_OPERATOR="$IMAGE_URL_OPERATOR:$TAG"
        IMG_BLOCKER="$IMAGE_URL_BLOCKER:$TAG"

        buildah bud --format docker --storage-driver=vfs -f ./build/controller/Dockerfile -t $IMG_OPERATOR .
        buildah tag --storage-driver=vfs $IMG_OPERATOR $IMAGE_URL_OPERATOR:latest
        buildah push --storage-driver=vfs $IMG_OPERATOR docker://$IMG_OPERATOR
        buildah push --storage-driver=vfs $IMAGE_URL_OPERATOR:latest docker://$IMAGE_URL_OPERATOR:latest

        buildah bud --format docker --storage-driver=vfs -f ./build/blocker/Dockerfile -t $IMG_BLOCKER .
        buildah tag --storage-driver=vfs $IMG_BLOCKER $IMAGE_URL_BLOCKER:latest
        buildah push --storage-driver=vfs $IMG_BLOCKER docker://$IMG_BLOCKER
        buildah push --storage-driver=vfs $IMAGE_URL_BLOCKER:latest docker://$IMAGE_URL_BLOCKER:latest
      env:
      - name: IMAGE_URL_OPERATOR
        value: tmaxcloudck/cicd-operator
      - name: IMAGE_URL_BLOCKER
        value: tmaxcloudck/cicd-blocker
      securityContext:
        privileged: true
      when:
        tag:
        - v.*
      notification:
        onSuccess:
          email:
            receivers:
              - ck1_2@tmax.co.kr
              - cqa1@tmax.co.kr
              - cqbqdd11519@gmail.com
            title: "CI/CD Operator {{ .Spec.Refs.Base.Ref.GetTag }} 배포 안내 메일"
            isHtml: true
            content: |
              <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
              <html xmlns="http://www.w3.org/1999/xhtml">
               <head>
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
                <title>CI/CD Operator {{ .Spec.Refs.Base.Ref.GetTag }} 배포 안내 메일</title>
                <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
              </head>
              <body>
                <div style="font-size: 10pt; font-family: Verdana,Geneva,sans-serif">
                  <div>안녕하세요, CK1-2팀 김성현입니다.<br>HyperCloud CI/CD Operator {{ .Spec.Refs.Base.Ref.GetTag }} 배포 안내 메일입니다.</div>
                  <div>
                    <ul>
                      <li>이미지: docker.io/tmaxcloudck/cicd-operator:{{ .Spec.Refs.Base.Ref.GetTag }}</li>
                      <li>이미지: docker.io/tmaxcloudck/cicd-blocker:{{ .Spec.Refs.Base.Ref.GetTag }}</li>
                    </ul>
                  </div>
                  <div>수정 사항은 릴리즈 노트 <a href="{{ .Spec.Refs.Link }}/releases/tag/{{ .Spec.Refs.Base.Ref.GetTag }}" target="_blank">{{ .Spec.Refs.Link }}/releases/tag/{{ .Spec.Refs.Base.Ref.GetTag }}</a> 참조 부탁드립니다.<br><br>감사합니다.</div>
                </div>
              </body>
              </html>
