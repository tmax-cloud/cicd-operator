
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: approvals.cicd.tmax.io
spec:
  group: cicd.tmax.io
  names:
    kind: Approval
    listKind: ApprovalList
    plural: approvals
    singular: approval
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current status of Approval
      jsonPath: .status.result
      name: Status
      type: string
    - description: Created time
      jsonPath: .metadata.creationTimestamp
      name: Created
      type: date
    - description: Decided time
      jsonPath: .status.decisionTime
      name: Decided
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Approval is the Schema for the approvals API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApprovalSpec defines the desired state of Approval
            properties:
              integrationJob:
                description: IntegrationJob is a related IntegrationJob name (maybe
                  a grand-parent of Approval)
                type: string
              jobName:
                description: JobName is a name of actual job in IntegrationJob
                type: string
              link:
                description: Link is a description link approvers may refer to
                type: string
              message:
                description: Message is a message from requester
                type: string
              pipelineRun:
                description: PipelineRun points the actual pipeline run object which
                  created this Approval
                type: string
              podName:
                description: 'PodName represents the name of the pod to be approved
                  to proceed Deprecated: not used from HyperCloud5, only for the backward
                  compatibility with HyperCloud4'
                type: string
              sender:
                description: Sender is a requester (probably be pull-request author
                  or pusher)
                properties:
                  email:
                    type: string
                  name:
                    type: string
                required:
                - name
                type: object
              skipSendMail:
                description: SkipSendMail describes whether or not to send mail for
                  request/result for approvers
                type: boolean
              users:
                description: Users are the list of the users who are requested to
                  approve the Approval
                items:
                  type: string
                type: array
            required:
            - users
            type: object
          status:
            description: ApprovalStatus defines the observed state of Approval
            properties:
              approver:
                description: Approver is a user who actually approved
                type: string
              conditions:
                description: Conditions of Approval
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              decisionTime:
                description: Decision time of Approval
                format: date-time
                type: string
              reason:
                description: Decision message
                type: string
              result:
                description: Decision result of Approval
                type: string
            required:
            - conditions
            - result
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
